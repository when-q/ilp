var documenterSearchIndex = {"docs":
[{"location":"#Informatics-Lunch-Practical","page":"Index","title":"Informatics Lunch Practical","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"","category":"page"},{"location":"#Functions","page":"Index","title":"Functions","text":"","category":"section"},{"location":"#Position.jl","page":"Index","title":"Position.jl","text":"","category":"section"},{"location":"","page":"Index","title":"Index","text":"CurrentModule = ilp.Position","category":"page"},{"location":"","page":"Index","title":"Index","text":"LongLat\nLine2D\nisconfined(coord::LongLat)\nintersects(e::Line2D, l::Line2D)\ndistanceto(a::LongLat, b::LongLat)\ndistanceto(a::LongLat,b::LongLat, noflyzone::Vector{Vector{Line2D}})\ncloseto(coord::LongLat, point::LongLat)\nnextPosition(coord::LongLat, theta::Int64)","category":"page"},{"location":"#ilp.Position.LongLat","page":"Index","title":"ilp.Position.LongLat","text":"struct LongLat\n\nA structure that stores position related property for an object\n\nFields\n\nlongitude: the longitude of the position of any point\nlatitude:  the latitude of the position of any point\nangle:     the angle of the drone at a specific point, in integer. It is required to be a multiple of 10.\n\n\n\n\n\n","category":"type"},{"location":"#ilp.Position.Line2D","page":"Index","title":"ilp.Position.Line2D","text":"Line2D(s::LongLat, e::LongLat)\n\nLine2D represents a line by its starting and ending point\n\n\n\n\n\n","category":"type"},{"location":"#ilp.Position.isconfined-Tuple{ilp.Position.LongLat}","page":"Index","title":"ilp.Position.isconfined","text":"isconfined(coord::LongLat)::Bool\n\nTakes a coordinate and check whether it's in the confinement zone. returns true if it is in the zone.\n\n\n\n\n\n","category":"method"},{"location":"#ilp.Position.intersects-Tuple{ilp.Position.Line2D, ilp.Position.Line2D}","page":"Index","title":"ilp.Position.intersects","text":"intersects(e::Line2D, l::Line2D)::Bool\n\n(a,b)→(c,d) intersects (p,q) → (r,s) Check whether two lines intersects\n\n\n\n\n\n","category":"method"},{"location":"#ilp.Position.distanceto-Tuple{ilp.Position.LongLat, ilp.Position.LongLat}","page":"Index","title":"ilp.Position.distanceto","text":"distanceto(a::LongLat, b::LongLat)::Float64\n\nCalculate the distance between two coordinates\n\n\n\n\n\n","category":"method"},{"location":"#ilp.Position.distanceto-Tuple{ilp.Position.LongLat, ilp.Position.LongLat, Vector{Vector{ilp.Position.Line2D}}}","page":"Index","title":"ilp.Position.distanceto","text":"distanceto(a::LongLat, b::LongLat, noflyzone::Vector{Vector{Line2D}})::Float64\n\nGet the distance between two coordinates, if it intersects the no-fly zone it will be set to a high value\n\n\n\n\n\n","category":"method"},{"location":"#ilp.Position.closeto-Tuple{ilp.Position.LongLat, ilp.Position.LongLat}","page":"Index","title":"ilp.Position.closeto","text":"closeto(coord::LongLat, point::LongLat)::Bool\n\ncheck whether two points are close to each other\n\n\n\n\n\n","category":"method"},{"location":"#ilp.Position.nextPosition-Tuple{ilp.Position.LongLat, Int64}","page":"Index","title":"ilp.Position.nextPosition","text":"nextPosition(coord::LongLat, θ::Int64)::LongLat\n\nGet the next position of the drone\n\n\n\n\n\n","category":"method"}]
}
